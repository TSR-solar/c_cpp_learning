/*
在数据类型中，与整数相对的就是浮点数；
浮点数包括三种类型，分别是：float、double、long double；
它们的内存分别是8个字节、16个字节、32个字节；
由于long double极少用到，这里只介绍float和double；
*/

/*
float变量的范围为  ±(1.2e-38~3.4e38)和0；
double变量的范围为 ±(2.2e-308~1.79e308)和0；
这代表它们在极其接近0的部分仍有一小部分数无法表达（不包括0）；
此外，浮点数可以输出 ±inf 和 nan；
inf即infinite，即无穷大；
与一般的算数规则不同，正数除以0可以得到+inf，负数除以0可以得到-inf；
nan即not a number，表示非数；即不存在的数；
0除以0可以得到nan；
*/

/*
另外，由于计算机内部的数均为二进制数，对于小数位数过多的数，计算机只能以近似的数去拟合；
这就是说，浮点数的范围区间并不是连续的，而是离散的；
拟合的精度有限。所以把浮点数准确的小数位数称为有效位数；
float的有效位数为7，double的有效位数为15；
所以double又叫“双精度浮点数”；
*/



/*
与整数类似，浮点数输入输出也有其特定形式；
float输入用%f，输出也用%f；
double输入用%lf，输出用%f；

此外，还可以用%e输出，此时输出的是浮点数的科学计数法；
浮点数输入可直接使用科学计数法形式；
*/

/*
浮点数的二进制表达形式一般如下：
以double为例，它由64bit；
第一位（最高位）用来记录数的正负（补码）；
2-12位用来记录浮点数的数量级；
后面的位用来表示浮点数的有效数字；

由于用来表达有效数字的bit终究是有限的，所以在小数位数过多时会产生误差；
*/

/*
正如整数输入的类型默认为int，浮点数输入的类型默认为double；
想要表达float可以在数字后面加上f；
*/

/*
如果没有特殊需要，整数类型用int，浮点数类型用float就行了；
*/