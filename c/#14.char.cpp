/*
这里是字符类型；
之前提到了char；
其实char除了表示整数，还可以表示字符；
因为char是character的缩写；
除了字母、符号，数字同时也可以是字符；
*/

/*
输入输出char类型变量可以使用%c；
*/

/*
由于计算机内部全部是二进制数，因此要想办法把字符转换为二进制数；
因此要使用ASCII编码，每个字符与ASCII中的一个数字编码一一对应；
再将ASCII编码转换为二进制数，就能实现字符在计算机内部的表达；
*/

/*
想要初始化char类型的变量为字符，不管它是不是数字，都必须加上单引号； ‘1’
如果数字没加单引号，char将会存储数字对应的ASCII编码的字符；
如果非数字没加单引号，如果这不是一个变量，会报错；
值得一提的是，‘’也是一个字符，即使单引号里面没有任何东西；
*/

/*
字符也可以进行计算，但实际计算的是字符的ASCII编码；
比如， 一个字符加一个数字得到ASCII码表中加上那个数之后的字符；
两个字符运算，先将字符转换为ASCII编码，算完后再转换为字符；
*/
//如下面的例子：
#include <stdio.h>
int main()
{
	char x = 'a' + 1;
	char y = 'b'-'a';
	printf("%c\n",x);
	printf("%d\n",y);
}
//可以得到 x=‘b'；y=1。

/*
除此之外，还有一类特殊的字符，称为“逃逸字符”；
它们以反斜杠 \ 开头，作用是控制printf输出的内容；
逃逸字符主要包括以下这些：

\b 回退一格         \"双引号
\t到下一个表格位    \'单引号
\n换行              \\反斜杠本身
\r回车

其中\t可以起到让数据在表格位对齐的作用；
*/

/*
有时，我们需要在各个变量类型之间做转换；
这时，我们就要用到强制类型转换符；
它的格式是 （类型名）值；
同时它也是一个运算符；它的优先级为1，比任何四则运算都高；
*/